@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">Pri.Ek2.Client</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">

        @if (!isAuthenticated)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/login">
                    <span class="bi bi-box-arrow-in-right" aria-hidden="true"></span> Login
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/">
                    <span class="bi bi-speedometer2" aria-hidden="true"></span> Dashboard
                </NavLink>
            </div>

            @if (isAdmin)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/register">
                        <span class="bi bi-person-plus" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/admin/users">
                        <span class="bi bi-people" aria-hidden="true"></span> Gebruikersbeheer
                    </NavLink>
                </div>
            }

            @if (isAdmin || isMechanic)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/maintenance-logs">
                        <span class="bi bi-tools" aria-hidden="true"></span> Onderhoudslogs
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/maintenance-schedules">
                        <span class="bi bi-calendar-check" aria-hidden="true"></span> Onderhoudsschema's
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/Vehicles">
                        <span class="bi bi-calendar-check" aria-hidden="true"></span> Voertuig toevoegen
                    </NavLink>
                </div>
            }

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/user-profile">
                    <span class="bi bi-person-circle" aria-hidden="true"></span> Mijn Profiel
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <a class="nav-link" href="#" @onclick="Logout">
                    <span class="bi bi-box-arrow-right" aria-hidden="true"></span> Logout
                </a>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool isAuthenticated;
    private bool isAdmin;
    private bool isMechanic;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        isAuthenticated = user.Identity?.IsAuthenticated ?? false;

        isAdmin = user.IsInRole("Admin");
        isMechanic = user.IsInRole("Mechanic");

        AuthenticationStateProvider.AuthenticationStateChanged += OnAuthenticationStateChanged;
    }

    private async void OnAuthenticationStateChanged(Task<AuthenticationState> authStateTask)
    {
        var authState = await authStateTask;
        var user = authState.User;
        isAuthenticated = user.Identity?.IsAuthenticated ?? false;
        isAdmin = user.IsInRole("Admin");
        isMechanic = user.IsInRole("Mechanic");
        StateHasChanged();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("/login", true);
    }

    public void Dispose()
    {
        AuthenticationStateProvider.AuthenticationStateChanged -= OnAuthenticationStateChanged;
    }
}
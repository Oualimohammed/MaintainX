@page "/login"
@inject IAuthService AuthService
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider


<div class="login-container">
    <div class="login-card">
        <div class="card-body p-5">
            <div class="text-center mb-4">
                @*<img src="/images/logo.png?v=2" alt="Logo" class="loginAndRegister-logo" />*@
                <img src="/images/logo.png" alt="Logo" class="loginAndRegister-logo" style="width: 100px !important; height: auto !important; display: block; margin: 0 auto;" />
                <h2 class="mt-3">Welkom terug</h2>
                <p class="text-muted">Voer je inloggegevens in</p>
            </div>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger alert-dismissible fade show">
                    @errorMessage
                    <button type="button" class="btn-close" @onclick="() => errorMessage = null"></button>
                </div>
            }

            <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />

                <div class="mb-3">
                    <label class="form-label">Emailadres</label>
                    <InputText class="form-control" @bind-Value="loginModel.Email" />
                    <ValidationMessage For="@(() => loginModel.Email)" class="text-danger small" />
                </div>

                <div class="mb-4">
                    <label class="form-label">Wachtwoord</label>
                    <InputText type="password" class="form-control" @bind-Value="loginModel.Password" />
                    <ValidationMessage For="@(() => loginModel.Password)" class="text-danger small" />
                </div>

                <button type="submit" class="btn btn-primary w-100 py-2 mb-3" disabled="@isLoading">
                    @if (isLoading)
                    {
                        <span class="spinner-border spinner-border-sm" role="status"></span>
                        <span> Inloggen...</span>
                    }
                    else
                    {
                        <span>Inloggen</span>
                    }
                </button>

                <div class="text-center">
                    <a href="/forgot-password" class="text-link small">Wachtwoord vergeten?</a>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private LoginRequestDto loginModel = new();
    private string? errorMessage;
    private bool isLoading = false;

    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = null;

        try
        {
            var response = await AuthService.LoginAsync(loginModel);
            Navigation.NavigateTo("/");
        }
        catch (Exception ex)
        {
            errorMessage = ex switch
            {
                HttpRequestException => "Server niet bereikbaar",
                _ => "Ongeldige inloggegevens"
            };
        }
        finally
        {
            isLoading = false;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            Navigation.NavigateTo("/");
        }
    }
}